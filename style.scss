$largest : 75em;//1200
$large: 68.75em; //1100
$medium: 56.25em; //900
$small: 37.5em; //600
$smallest: 31.25em; //500

.container {
    max-width: 120rem;
    margin: 8rem auto;
    background-color: var(--color-gray-light2);
    box-shadow: var(--shadow-black);

    @media only screen and (max-width: $largest) {
        margin: 0;
        max-width: 100%
    }
}

.header {
    background-color: #fff;
    min-height: 8rem;
    border-bottom: var(--line);
    display: flex;
    justify-content: space-between;
    align-items: center;

    @media only screen and (max-width: $smallest) {
        flex-wrap: wrap;
        align-content: space-around; // align between rows
        min-height: 11rem;
     }
}

.logo {
    margin-left: 3rem;
    width: 4rem;
    height: 3rem;
}
.search {
    flex: 0 0 40%;
    display: flex;
    justify-content: center;
    align-items: center;

    @media only screen and (max-width: $smallest) {
        order: 1; // initial order for all flex-item is 0
        flex: 0 0 100%;
        background-color: var(--color-gray-light2);
     }
    &__input {
        font-size: 1.4rem;
        font-family: inherit;
        color: inherit;
        width: 90%;
        transition: all .2s;
        padding: 0.7rem 2rem;
        border-radius: 100px;
        border: none;
        background-color: var(--color-gray-light2);
        margin-right: -3.5rem;
        &:focus {
            outline: none;
            width: 100%;
            background-color: var(--color-gray-light3);
        }
        &::-webkit-input-placeholder {
            font-weight: 500;
            letter-spacing: 1px;
            color: var(--color-gray-light4)
        }
    }

    &__button {
        border: none;
        background-color: var(--color-gray-light2);
    }
    &__icon {
        width: 2rem;
        height: 2rem;
        fill: var( --color-gray-dark2);
    }

    &__input:focus + .search__button {
        background-color: var(--color-gray-light3);
    }
}
.people-nav {
    align-self: stretch;

    display: flex;
    
    & > * {
        height: 100%;
        padding: 0 2rem;
        background-color: var(--color-gray-light2);
        display: flex;
        align-items: center;
    }
    & > *:hover {
        background-color: var(--color-gray-light4);
    }
    &__icon-box {
        position: relative;
    }
    &__icon {
        width: 2.5rem;
        height: 2.5rem;
    }
    &__notification {
        background-color: var(--color-primary);
        color: #fff;
        width: 1.5rem;
        height: 1.5rem;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;
        top: 2rem;
        right: 1.5rem;
    }
    &__profile-pic {
        height: 3.5rem;
        border-radius: 50%;
    }
}
.content {
    display: flex;
    
    @media only screen and (max-width: $medium) {
       flex-direction: column;
    }
}

.sidebar {
    background-color: var(--color-gray-dark1);
    flex: 0 0 20%; //flex-grow flex-shrink flex-basis

    display: flex;
    flex-direction: column;
    justify-content: space-between;

    &__list {
        list-style: none;
        margin-top: 3.5rem;
        @media only screen and (max-width: $medium) {
            display: flex;
            margin: 0;
         }

    }

    &__list-item {
        position: relative;
        &:not(:last-child) {
            margin-bottom: 1rem;
        }
        @media only screen and (max-width: $medium) {
            flex: 1;
         }
    }

    &__list-item:before {
        content: "";
        position:absolute;
        top:0;
        left:0;
        background-color: var(--color-primary);
        width: 3px;
        height: 100%;
        transform: scaleY(0);
        transform-origin: bottom;
        transition: transform .2s,
                    width .4s ease-out .2s,
                    background-color .1s;

    }

    &__list-item:hover::before, &__list-item--active::before {
        transform: scaleY(1);
        width: 100%;
    }

    &__list-item:active::before {
        background-color: var(--color-primary-light);
    }

    &__link:link, &__link:visited {
        text-decoration: none;
        color: #fff;
        display: flex;
        align-items: center;
        font-size: 1.2rem;
        padding: 1.5rem 3rem;
        z-index: 100;
        position:relative; //z-index always work when position is specified.

        @media only screen and (max-width: $small) {
            flex-direction: column;
         }
    }

    &__icon {
        width: 2rem;
        height: 2rem;
        margin-right: 2rem;
        fill: currentColor;
        @media only screen and (max-width: $small) {
            margin-right: 0;
            margin-bottom: 1rem;
         }
    }

    &__copyright-text {
        color: var(--color-gray-light4);
        text-align: center;
        font-size: 1.4rem;
        @media only screen and (max-width: $medium) {
           display: none;
         }
    }
}

.main-content {
    flex: 1;
}

.image-gallery {
    display: flex;
    &__image {
        width: 100%;
        display: block; 
        // Image is an inline element but exceptionally, width and height is supported for img tag
        // Being an inline element, it leaves small space, inorder to avoid that we are using  dis: block               
    }
}

.overview {
    display: flex;
    align-items: center;
    background-color: #fff;
    padding-left: 1rem;
    @media only screen and (max-width: $smallest) {
        padding: 0;
     }
    .hotel-name {
        font-size: 1.5rem;
        font-weight: 600;
        letter-spacing: 2px;
        text-transform: uppercase;
        color: var(--color-gray-light4);
        margin-right: 1rem;
 
    }

    .rating__icon, .location__icon {
        width: 2rem;
        height: 2rem;
        fill: var(--color-primary);
    }

    .rating {
        margin-right: auto;
        // when we give flex:1, element will occupy entire available space
        // margin-right: auto, element will occupy only the space it wants
        // and it's margin only grow
    }

    .location {
        display: flex;
        align-items: center;
    }

    .voting {
        background-color: var(--color-primary);
        align-self: stretch;
        color: white;
        padding: .5rem;
        &__avg {
            font-size: 2rem;
        }
    }
}

.button-inline {
    border: none;
    background-color: transparent;
    margin-right: 2rem;
    border-bottom: 1.5px solid var(--color-primary);
    font-size: 1.4rem;
    color: var(--color-primary);
}

.content-box {
    display: flex;
    padding: 4.5rem;
    font-size: 1.4rem;
    @media only screen and (max-width: $medium) {
        padding: 2rem;
     }
     @media only screen and (max-width: $small) {
       flex-direction: column;
    }

}

.description {
    background-color: #fff;
    margin-right: 4.5rem;
    flex: 0 0 60%;
    padding: 3rem;
    color: var(--color-gray-dark3);
    box-shadow: var( --shadow-light);
    @media only screen and (max-width: $medium) {
        padding: 1rem;
        margin-right: 2rem;
     }
     @media only screen and (max-width: $small) {
        flex-direction: column;
        margin-right: 0;
        margin-bottom: 2rem;
     }
}

.paragraph {
    text-align: justify;
    &:not(:last-of-type) {
        margin-bottom: 2rem;
    }
}

.list {
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    border-top: var(--line);
    border-bottom: var(--line);
    margin: 3rem 0;
    padding: 2rem .5rem;

    &__item {
        flex: 0 0 50%;
        display: flex;
        align-items: center;
        margin-bottom: .7rem;
        font-size: 1.3rem;
    }
    &__item::before {
        // when svg is used as background image, we can't able to change the color.
        // so only we are using masks.
        content: "";
        display: inline-block;
        background-color: var(--color-primary);
        width: 1.3rem;
        height: 1.3rem;
        margin-right: .7rem;
        mask-image: url(../assets/images/chevron-thin-right.svg);
        mask-size: contain;
    }
}

.recommend {
    display: flex;
    align-items:center;
    &__text {
        font-size: 1.3rem;
        margin-right: auto;
    }
    &__images {
        display: flex;
    }
    &__images--photos {
        width: 4rem;
        height: 4rem;
        border-radius: 50%;
        border: 2px solid #fff;
        margin-right: -1rem;
    }
}

.user-story {
    flex: 1;

    .button-class {
        text-align: center;
    }
    
}

.user-stories {
    box-shadow: var( --shadow-light);
    padding: 1.5rem;
    margin-bottom: 3rem;
    position: relative;
    background-color: #fff;

    &__text {
        z-index: 100;
        position: relative; // z-index works only when position specified
        margin-bottom: 1rem;
        margin-left: 1.5rem;
    }
    &__userbox {
        display: flex;
        align-items: center;
    }
    &__image {
        width: 4rem;
        height: 4rem;
        border-radius: 50%;
        margin-right: 1rem;
        @media only screen and (max-width: $small) {
            margin-right: 2rem;
         }
    }
    &__user {
        margin-right: auto;
    }
    &__user-date {
        font-size: 1.1rem;
    }
    &__rating {
        font-size: 2rem;
        color: var(--color-primary);
    }
    &::before {
        content:"\201C"; // html entities css tricks fro reference
        position: absolute;
        top: -2rem;
        left:0;
        font-size: 20rem;
        line-height: 1;
        color: var( --color-gray-light2);
    }
}

.booking {
    text-align: center;
    font-size: 2rem;
    margin-bottom: 3rem;

    &__text {
        text-transform: uppercase;
        margin-bottom: 3rem;
    }
    &__button {
        background-image:  linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
        border: none;
        border-radius: 100px;
        color: #fff;
        position: relative;
        font-size: 1.4rem;
        text-transform: uppercase;
        overflow: hidden; // To hide span element outside button
        &:hover {
            background-image:  linear-gradient(to right,  var(--color-primary-dark), var(--color-primary-light));
        } 
    }

    &__visible {
        display: inline-block;
        padding: 2rem 7rem;
        height:100%;
        width:100%;
        transition: all .2s;

    }
    &__invisible {
        position: absolute;
        padding: 2rem 0;
        top:-100%;
        left:0;
        display: inline-block;
        height:100%;
        width:100%;
        transition: all .2s;

    }
    &:focus {
        outline: none;
    }
    &:hover &__visible{
        // top: -100%; // As we doesn't use top in visible class we can't able to use top here also
        transform: translateY(100%);
    }
    &:hover &__invisible{
        top:0;
    } 


}